СПРАВОЧНИК КОМАНД PUTTY / SSH / UNIX / LINUX:
Чтобы получить доступ к серверу по протоколу SSH (войти в консоль сервера) из Windows требуется установить на свой компьютер специальную программу (SSH client), например putty. Программа распростаняется бесплатно, вы можете скачать программу по ссылке скачать putty

После установки программы рекомендуем вам ознакомиться с основными командами, которые применяются для управления сервером. Доступ по SSH обычно используют тогда, когда необходима аренда выделенного сервера или специальный хостинг сайтов, обычно ВИП тариф, а так же если вы берете в аренду виртуальный сервер

------------------------------------------------------------------------------
ФАЙЛОВЫЕ КОМАНДЫ:
ls – список файлов и каталогов

ls -al – форматированный список со скрытыми каталогами и файлами

cd dir – сменить директорию на dir

cd – сменить на домашний каталог

pwd – показать текущий каталог

mkdir dir – создать каталог dir

rm file – удалить file

rm -r dir – удалить каталог dir

rm -f file – удалить форсированно file

rm -rf dir – удалить форсированно каталог dir *

cp file1 file2 – скопировать file1 в file2

cp -r dir1 dir2 – скопировать dir1 в dir2; создаст каталог dir2, если он не существует

mv file1 file2 – переименовать или переместить file1 в file2. если file2 существующий каталог - переместить file1 в каталог file2

ln -s file lin – создать символическую ссылку link к файлу file

touch file – создать file

cat > file – направить стандартный ввод в file

more file – вывести содержимое file

head file – вывести первые 10 строк file

tail file – вывести последние 10 строк file

tail -f file – вывести содержимое file по мере роста, начинает с последних 10 строк

--------------------------------------------------------------------------------------------------
УПРАВЛЕНИЕ ПРОЦЕССАМИ:
ps ax – вывести ваши текущие активные процессы

top – показать все запущенные процессы

kill pid – убить процесс с id pid

killall proc – убить все процессы с именем proc *

bg – список остановленных и фоновых задач; продолжить выполнение остановленной задачи в фоне

fg – выносит на передний план последние задачи

fg n – вынести задачу n на передний план

--------------------------------------------------------------------------------------------------------
ПРАВА ДОСТУПА НА ФАЙЛЫ:
chmod octal file – сменить права file на octal, раздельно для пользователя, группы и для всех добавлением:

4 – чтение (r)
2 – запись (w)
1– исполнение (x)
Примеры:

chmod 0777 – чтение, запись, исполнение для всех

chmod 0755 – rwx для владельца, rx для группы и остальных.

Дополнительные опции: man chmod.

-----------------------------------------------------------------------------------
SSH:
ssh user@host – подключится к host как user

ssh -p port user@host – подключится к host на порт port как user

ssh-copy-id user@host – добавить ваш ключ на host для user чтобы включить логин без пароля и по ключам

-------------------------------------------------------------------------------------------------------------
ПОИСК:
grep pattern files – искать pattern в files

grep -r pattern dir – искать рекурсивно pattern в dir

command | grep pattern – искать pattern в выводе command

locate file – найти все файлы с именем file

find [путь, откуда начинаем поиск] -name "filename.ext" – найти все файлы с именем filename.ext. Используйте маски, например - "*file?"

--------------------------------------------------------------------------------------------------------
СИСТЕМНАЯ ИНФОРМАЦИЯ:
date – вывести текущую дату и время

cal – вывести календарь на текущий месяц

uptime – показать текущий аптайм

w – показать пользователей онлайн

whoami – имя, под которым вы залогинены

finger user – показать информацию о user

uname -a – показать информацию о ядре

cat /proc/cpuinfo – информация ЦПУ

cat /proc/meminfo – информация о памяти

man command – показать мануал для command

df – показать инф. о использовании дисков

du – вывести “вес” текущего каталога

free – использование памяти и swap

whereis app – возможное расположение программы app

which app – какая app будет запущена по умолчанию

--------------------------------------------------------------------------------
АРХИВАЦИЯ:
tar cf file.tar files – создать tar-архив с именем file.tar содержащий files

tar xf file.tar – распаковать file.tar

tar czf file.tar.gz files – создать архив tar с сжатием Gzip

tar xzf file.tar.gz – распаковать tar с Gzip

tar cjf file.tar.bz2 – создать архив tar с сжатием Bzip2

tar xjf file.tar.bz2 – распаковать tar с Bzip2

gzip file – сжать file и переименовать в file.gz

gzip -d file.gz – рапаковать file.gz в file

---------------------------------------------------------------
СЕТЬ:
ping host – пропинговать host и вывести результат

whois domain – получить информацию whois для domain

dig domain – получить DNS информацию domain

dig -x host – реверсивно искать host

wget file – скачать file

wget -c file – продолжить остановленную закачку

---------------------------------------------------------
УСТАНОВКА ПАКЕТОВ:
Установка из исходников:

./configure

make

make install

dpkg -i имя_пакета.deb – установить пакет *.deb (Debian, Ubuntu)

rpm -Uvh имя_пакета.rpm – установить пакет *.rpm (CentOs, Fedora)

---------------------------------------------------------------------------
КЛАВИАТУРНЫЕ СОЧЕТАНИЯ:
Ctrl+C – завершить текущую команду

Ctrl+Z – остановить текущую команду, продолжть с fg на переднем плане или bg в фоне

Ctrl+D – разлогиниться, тоже самое, что и exit

Ctrl+W – удалить одно слово в текущей строке

Ctrl+U – удалить строку

!! - повторить последнюю команду

exit – разлогиниться


---------------------------------------------------------------------

Вызов программы grep
Программа grep имеет следующие варианты запуска:

grep [ОПЦИИ] ШАБЛОН [ФАЙЛ...]
grep [ОПЦИИ] -e ШАБЛОН... [ФАЙЛ...]
grep [ОПЦИИ] -f ФАЙЛ... [ФАЙЛ...]

Может быть ноль или более ОПЦИЙ. ШАБЛОН будет рассматриваться только как таковой (и не как ФАЙЛ) если он ещё не был указан внутри ОПЦИЙ (использованием опций «-e шаблон» или «-f файл»). Может быть указано ноль или более ФАЙЛОВ.

Опции grep
Рассмотрим подробнее опции команды grep.

Общая информация о программе

--help

Вывод справки по использованию с кратким описанием опций команды и адресом для отправки багов, затем выход из программы.

-V, --version

Печатает версию grep в поток стандартного вывода, затем завершает работу. Этот номер версии должен быть включён во все сообщения о багах.

Выбор типа регулярного выражения

-E, --extended-regexp

Интерпретировать ШАБЛОН как расширенное регулярное выражение (ERE, подробности ниже).

-F, --fixed-strings

Интерпретировать ШАБЛОН как список фиксированных строк (вместо регулярных выражений), разделённых символом новой строчки, которые используется для поиска совпадений.

-G, --basic-regexp

Интерпретировать ШАБЛОН как базовое регулярное выражение (BRE, смотрите ниже). Это значение по умолчанию.

-P, --perl-regexp

Интерпретировать ШАБЛОН как совместимое с Perl регулярное выражение (PCRE). Это высоко экспериментальная функция, и grep -P может выводить предупреждение о нереализованных возможностях.

Управление работой регулярных выражений


 
-e ШАБЛОН, --regexp=ШАБЛОН

Использовать ШАБЛОН как шаблон (образец). Если эта опция используется несколько раз или комбинируется с опцией -f (--file), делается поиск по всем заданным шаблонам. Эта опция может использоваться для защиты шаблона, начинающегося с «-»,

-f ФАЙЛ, --file=ФАЙЛ

Получает образцы из ФАЙЛА, один на строку. Если эта опция используется несколько раз или комбинирована с опцией -e (--regexp), то поиск делается по всем заданным шаблонам. Пустой файл содержит ноль образцов и, следовательно, ничему не будет совпадать.

-i, --ignore-case

Игнорировать различия регистра, т.е. символы, которые различаются только регистром, будут соответствовать друг другу.

Хотя это просто с буквами когда они различаются только регистром – в парах заглавная-прописная буква, поведение является неопределённым в других ситуациях. Например, заглавная «S» во многих локалях имеет необычную контрпару «ſ» (Unicode символ U+017F, LATIN SMALL LETTER LONG S), и не ясно, является ли этот необычный символ соответствием «S» или «s» даже когда перевод из строчной в заглавную приводит к «S».

Другой пример: маленькая германская буква «ß» U+00DF, LATIN SMALL LETTER SHARP S) обычно при переводе в заглавную превращается в двух символьную строку «SS», но она не соответствует «SS» и она может не соответствовать заглавной букве «ẞ» (U+1E9E, LATIN CAPITAL LETTER SHARP S) хотя перевод последней в строчную даёт предыдущую.

-v, --invert-match

Инвертирует (делает противоположным) смысл поиска соответствий, для выбора не-совпадающих строк.

-w, --word-regexp

Выбрать только строки, содержащее соответствие, которое формирует целые слова. Совпадение засчитывается только если совпадающая подстрока окружена символами начала/окончания строчки или неглавными составными символами. Главными составными символами являются буквы, цифры и знак подчёркивания. Эта опция не имеет эффекта, если также указана -x.

-x, --line-regexp

Выбор только тех соответствий, которые совпадают с целой строчкой. Для шаблона регулярного выражения это как если бы образец взяли в круглые скобки и затем окружили ^ и $.

-y

Абсолютный синоним для -i, предоставляется для совместимости.

--------------------------------------------------------------------------------
---------------------------------------------------------------

Поиск файлов с помощью find

Используйте утилиту find для поиска файлов в дереве каталогов по имени файла. Укажите имя дерева каталогов для поиска, а затем, с помощью опции `-name' - имя нужного Вам файла.

Чтобы увидеть список всех файлов системы, которые называются `top', наберите:

$ find / -name top [Enter]

Эта команда проведет поиск во всех каталогах, куда Вам разрешен доступ; если Вы не имеете прав прочесть содержимое каталога, find сообщить, что поиск в данном каталоге Вам запрещен.

Опция `-name' различает прописные и строчные буквы; чтобы использовать поиск без этих различий, воспользуйтесь опцией `-iname'.

Чтобы увидеть список всех файлов системы, которые называются `top', без учета регистра символов, наберите:

$ find / -iname top [Enter]

Эта команда найдет все файлы, название которых состоит из букв `top' - включая `Top', `top', и `TOP'.

Для поиска файлов, имена которых совпадают с определенным образцом, удобно использовать метасимволы. Образцы имен нужно указывать в одинарных кавычках.

Чтобы получить список файлов системы, имена которых начинаются с букв `top', введите:

$ find / -name 'top*' [Enter]

Чтобы получить список файлов системы, имена которых начинаются с букв `top', за которыми следуют еще три символа, введите:

$ find / -name 'top???' [Enter]

Чтобы получить список файлов системы, имена которых начинаются с букв `top', за которыми следуют пять и более символов, введите:

$ find / -name 'top?????*' [Enter]

Чтобы увидеть все файлы с расширением `.tex'в Вашем рабочем каталоге, независимо от их написания, введите:

$ find ~ -iname '*.tex' [Enter]

Чтобы увидеть все файлы в каталоге `/usr/share', содержащие в имени слово `farm', введите:

$ find /usr/share -name '*farm*' [Enter]

Используйте `-regex' вместо `-name' для поиска файлов, имена которых удовлетворяют регулярному выражению, или образцу, описывающему несколько строк.

Чтобы увидеть все файлы в текущем каталоге, имена которых содержат строку `net' или `comm', наберите:

   $ find . -regex '.*\(net\|comm\).*' [Enter]
Примечание: Опция `-regex' совпадает с полным именем файла относительно указанного каталога, а не с отдельным именем файла.

Чтобы найти файлы определенного размера, используйте опцию `-size', указав после нее требуемый размер файла. Размер файла может быть задан в трех различных формах: если перед ним указан знак плюс (`+'), ищутся все файлы, большие, чем указанный размер; если указан знак минус (`-'), ищутся все файлы, меньшие, чем указанный размер; если префикс не указан, ищутся файлы точно указанного размера. (Единица измерения - блок 512 байт; символ `k' после размера указывает килобайты, символ `b' - байты.)

Чтобы вывести список файлов в каталоге `/usr/local', размер которых больше 10,000 килобайт, введите:

$ find /usr/local -size +10000k [Enter]

Чтобы вывести список файлов в домашнем каталоге, размер которых меньше 300 байт, введите:

$ find ~ -size -300b [Enter]

Чтобы вывести список файлов системы, размер которых составляет 42 блока по 512 байт, наберите:

$ find / -size 42 [Enter]

Используйте опцию `-empty' для поиска пустых файлов - т.е. файлов с размером 0 байт. Это полезно для поиска и удаления ненужных файлов.

Чтобы найти все пустые файлы в Вашем домашнем каталоге, введите:

$ find ~ -empty [Enter]

Чтобы найти файлы, модифицированные в определенное время, используйте команду find с опциями `-mtime' или `-mmin'; аргумент опции `-mtime' определяет количество прошедших суток (24 часа), а аргумент `-mmin' - количество прошедших минут.

Чтобы вывести все файлы в каталоге `/usr/local', модифицированные точно 24 часа назад, введите:

$ find /usr/local -mtime 1 [Enter]

Чтобы вывести все файлы в каталоге `/usr', модифицированные 5 минут назад, введите:

$ find /usr -mmin 5 [Enter]

Если Вы хотите указать промежуток времени, поставьте перед числом либо знак плюс (`+'), определяя большее или равное аргументу время, или знак минус (`-'), определяя время, меньшее или равное аргументу.

Чтобы вывести все файлы в каталоге `/usr/local', модифицированные в течение последних 24 часов, введите:

$ find /usr/local -mtime -1 [Enter]

Опция `-daystart' определяет отсчет времени с момента начала текущих суток.

Чтобы вывести все файлы в Вашем домашнем каталоге, модифицированные вчера, введите:

$ find ~ -mtime 1 -daystart [Enter]

Чтобы вывести все файлы в каталоге `/usr', модифицированные в течение года, введите:

$ find /usr -mtime +356 -daystart [Enter]

Чтобы вывести все файлы в Вашем домашнем каталоге, модифицированные в период от 2 до 4 дней тому назад, наберите:

$ find ~ -mtime 2 -mtime -4 -daystart [Enter]

Чтобы найти файлы, которые новее некоторого файла, введите его имя в качестве аргумента опции `-newer'.

Чтобы вывести все файлы в каталоге `/etc', которые новее файла `/etc/motd', введите:

$ find /etc -newer /etc/motd [Enter]

Чтобы найти все файлы новее определенной даты, используйте следующий трюк: создайте временный файл в каталоге `/tmp' и установите дату его модификации на требуемую с помощью touch, а затем поределите его как аргумент для `-newer'.

Чтобы вывести все файлы в Вашем домашнем каталоге, модифицированные после 4 мая текущего года, введите:

   $ touch -t 05040000 /tmp/timestamp [Enter]
   $ find ~ -newer /tmp/timestamp [Enter]
Чтобы найти файлы, принадлежащие определенному пользователю, укажите имя пользователя в качестве агрумента опции `-user'. Например, для поиска всех файлов в каталоге `/usr/local/fonts', принадлежащих пользователю warwick, наберите:

$ find /usr/local/fonts -user warwick [Enter]

Опция `-group' подобным образом определяет файлы, принадлежащие некоторой группе пользователей.

Чтобы вывести список файлов в каталоге `/dev', принадлежащих группе audio, введите:

$ find /dev -group audio [Enter]

Вы можете использовать команду find для выполнения других команд над найденными файлами, указав требуемые команды в качестве аргуентов опции `-exec'. Если Вы используететв команде строку `''', эта строка в команде будет заменена именем текущего найденного файла. Окончание команды помечается строкой `';''.

Чтобы найти все файлы в каталоге ` /html/' с расширением `.html', и вывести строки из этих файлов, содержащие слово `organic', введите:

$ find ~/html/ -name '*.html' -exec grep organic '{}' ';' [Enter]

Чтобы ввести подтверждение выполнения команды для файла, найденного find, используйте ключ `-ok' вместо `-exec'.

Чтобы удалить из Вашего домашнего каталога файлы, доступ к которым осуществлялся более года назад, с подтверждением для каждого файла, введите:

$ find ~ -used +365 -ok rm '{}' ';' [Enter]

Вы можете определить несколько опций find одновременно, чтобы найти файлы, удовлетворяющие сразу нескольким критериям.

Чтобы вывести список файлов в Вашем домашнем каталоге, имена которых начинаются со строки `top', и которые новее файла `/etc/motd', введите:

$ find ~ -name 'top*' -newer /etc/motd [Enter]

Чтобы сжать все файлы в Вашем домашнем каталоге, размер которых превышает 2 Mb, и которые еще не сжаты с помощью gzip (не имеют расширения `.gz'), введите:

$ find ~ -size +2000000c -regex '.*[^gz]' -exec gzip '{}' ';' [Enter]

Чтобы найти наибольший файл в каталоге, используйте команду ls с опцией `-S', которая сортирует файлы в нисходящем порядке по размеру (обычно ls выводит список файлов по алфавиту). Добавьте опцию `-l', чтобы вывести размер и другие атрибуты файла.Пример:

$ ls -lS [Enter]

Чтобы вывести оглавление каталога, начав с файлов наименьшего размера, используйте ls с ключами `-S' и `-r', которые сортируют вывод в обратном порядке.Пример:

$ ls -lSr [Enter]

Чтобы вывести список каталогов, отсортированных по размеру - то есть размеру всех содержащихся в них файлов - используйте du и sort. Команда du выводит список каталогов в восходящем порядке, начиная с самого маленького; опция `-S' помещает при выводе в первую колонку размер каталога в килобайтах. Укажите требуемое дерево каталогов в качестве аргумента du и перенаправьте вывод в команду sort с ключом `-n', которая отсортирует список по числам.

Чтобы вывести список подкаталогов в текущем дереве каталогов, отсортированный по размеру, введите:

$ du -S . sort -n [Enter]|

Если Вам нужно, чтобы первыми были указаны самые большие каталоги, используйте ключ `-r':

$ du -S . sort -nr [Enter]|

Чтобы быстро определить количество файлов в каталоге, используйте ls и перенаправьте вывод в команду `wc -l', которая выволит количество строк, пришедших на ее вход.

Для вывода общего количества файлов в текущем каталоге введите:

   $ ls | wc -l [RET]
   19
   $
Общее количество файлов - 19.
Поскольку ls по умолчанию не показывает скрытые файлы, приведенная выше команда не будет их учитывать. Опция `-A' для ls позволит посчитать обычные и скрытые файлы:

   $ ls -A | wc -l [RET]
   81
   $
Чтобы посчитать количество файлов во всем дереве каталогов, а не только в отдельном каталоге, используйте find вместо ls, и укажите специальный ключ для find - строку `
! -type d', чтобы исключить вывод и подсчет каталогов.

Чтобы вывести количество файлов в дереве `/usr/share', введите:

$ find /usr/share \! -type d wc -l [Enter]|

Чтобы вывести количество файлов и каталогов в дереве `/usr/share', введите:

$ find /usr/share wc -l [Enter]|

Чтобы вывести количество каталогов в дереве `/usr/share', введите:

$ find /usr/share \! -type f wc -l [Enter]|

Команда which позволяет Вам получить полный путь к приложению или другой команде, указав базовое имя файла в качестве опции. Это удобно, чтобы убедиться, что данное приложение или команда присутствуют в системе.

-----------------------------------------------------------------------------
Просмотр содержимого файла в Linux

cat file1
— вывести содержание файла file1 на стандартное устройство вывода

tac file1
— вывести содержимое файла file1 на типовое устройство вывода в обратном порядке (последняя строка становиться первой и т.д.)

more file1
— постраничный вывод охватываемого файла file1 на стандартное устройство вывода

less file1
— постраничный вывод охватываемого файла file1 на стандартное устройство вывода, но с возможностью пролистывания в обе стороны (вверх-вниз), розыска по содержимому и т.п.

head -2 file1
— вывести первые две строки файла file1 на стандартное механизм вывода. По-умолчанию выводится десять строк

tail -2 file1
— вывести последние две строчки файла file1 на стандартное устройство вывода. По-умолчанию выводится десять строк

tail -f /var/log/messages
— вводить содержимое файла /var/log/messages на стандартное устройство вывода по мере появления в нём текста.